
#test_quaternion
#ADD_EXECUTABLE(test_quaternion test_quaternion.cpp)
#TARGET_LINK_LIBRARIES(test_quaternion ${PROJECT_NAME})

#test_map
ADD_EXECUTABLE(test_map test_map.cpp)
TARGET_LINK_LIBRARIES(test_map ${PROJECT_NAME})

#test_circular_buffer
#ADD_EXECUTABLE(test_circular_buffer test_circular_buffer.cpp)
#TARGET_LINK_LIBRARIES(test_circular_buffer ${PROJECT_NAME})

#test_states
#ADD_EXECUTABLE(test_states test_states.cpp)
#TARGET_LINK_LIBRARIES(test_states ${PROJECT_NAME})

#test_error_states
# ADD_EXECUTABLE(test_error_states test_error_states.cpp)
# TARGET_LINK_LIBRARIES(test_error_states ${PROJECT_NAME})

#test_trajectory
# ADD_EXECUTABLE(test_trajectory test_trajectory.cpp)
# TARGET_LINK_LIBRARIES(test_trajectory ${PROJECT_NAME})

#test_multimap
# ADD_EXECUTABLE(test_multimap test_multimap.cpp)
# TARGET_LINK_LIBRARIES(test_multimap ${PROJECT_NAME})

#test_unordered_multimap
# ADD_EXECUTABLE(test_unordered_multimap test_unordered_multimap.cpp)
# TARGET_LINK_LIBRARIES(test_unordered_multimap ${PROJECT_NAME})

#test_weak_pointed_multimap
# ADD_EXECUTABLE(test_parental test_parental.cpp)
# TARGET_LINK_LIBRARIES(test_parental ${PROJECT_NAME})

#test_parent_child
# ADD_EXECUTABLE(test_branch_leaf test_branch_leaf.cpp)
# TARGET_LINK_LIBRARIES(test_branch_leaf ${PROJECT_NAME})

# test_NODE
#ADD_EXECUTABLE(test_node_linked test_node_linked.cpp)
#TARGET_LINK_LIBRARIES(test_node_linked ${PROJECT_NAME})

# test_frames
#ADD_EXECUTABLE(test_node_constrainer test_node_constrainer.cpp)
#TARGET_LINK_LIBRARIES(test_node_constrainer ${PROJECT_NAME})

# test_wolf_tree
#ADD_EXECUTABLE(test_wolf_tree test_wolf_tree.cpp)
#TARGET_LINK_LIBRARIES(test_wolf_tree ${PROJECT_NAME})

# test_up_down_mid
#ADD_EXECUTABLE(test_up_down_mid test_up_down_mid.cpp)
#TARGET_LINK_LIBRARIES(test_up_down_mid ${PROJECT_NAME})

# test_pointers
#ADD_EXECUTABLE(test_pointers test_pointers.cpp)
#TARGET_LINK_LIBRARIES(test_pointers ${PROJECT_NAME})

# test_mid_nodes
ADD_EXECUTABLE(test_mid_nodes test_mid_nodes.cpp)
TARGET_LINK_LIBRARIES(test_mid_nodes ${PROJECT_NAME})

# test_virtual_hierarchy
ADD_EXECUTABLE(test_virtual_hierarchy test_virtual_hierarchy.cpp)
TARGET_LINK_LIBRARIES(test_virtual_hierarchy ${PROJECT_NAME})

# test_eigen_jet
#ADD_EXECUTABLE(test_eigen_jet test_eigen_jet.cpp)
#TARGET_LINK_LIBRARIES(test_eigen_jet ${PROJECT_NAME})

#ADD_EXECUTABLE(fake fake.cpp)

